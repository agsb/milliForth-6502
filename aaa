;----------------------------------------------------------------------
;   For stacks:
;
;   stack operations slightly different: works forwards.
;
;   push is 'store and increase', pull is 'decrease and fetch',
;
;   why ? this way could use push for update here without extra code. 
;
;   best reason to use a backward stack is when it can grows thru 
;       end of another area.
;
;   common memory model organization of Forth: 
;   [tib->...<-spt: user forth dictionary :here->...<-rpt]
;   then backward stacks allow to use the slack space ... 
;
;   this 6502 Forth memory model blocked in pages of 256 bytes:
;   [page0][page1][page2][core ... forth dictionary ...here...]
;   
;   at page2, no rush over then stacks can go forwards:
;   [tib 40 cells][locals 16 cells][spt 36 cells][rpt 36 cells]

